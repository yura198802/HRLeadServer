// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monica.Core.DbModel.ModelCrm;

namespace Monica.Core.DbModel.Migrations
{
    [DbContext(typeof(HrDbContext))]
    partial class HrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.CategoryCompetence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CategoryCompetences");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Competence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("VacancyId");

                    b.ToTable("Competences");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("TestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Education")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Text")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompetenceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompetenceId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("SalaryMax")
                        .HasColumnType("double");

                    b.Property<double>("SalaryMin")
                        .HasColumnType("double");

                    b.Property<int>("SkillCandidat")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.VacancyClickResume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int");

                    b.Property<int?>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.HasIndex("VacancyId");

                    b.ToTable("VacancyClickResumes");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.VacancyMlResume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("double");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int");

                    b.Property<int?>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.HasIndex("VacancyId");

                    b.ToTable("VacancyMlResumes");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.VacancyWorkflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ResumeId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("VacancyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResumeId");

                    b.HasIndex("VacancyId");

                    b.ToTable("VacancyWorkflows");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Competence", b =>
                {
                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.CategoryCompetence", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Vacancy", null)
                        .WithMany("Competences")
                        .HasForeignKey("VacancyId");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Question", b =>
                {
                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Test", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.Test", b =>
                {
                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Competence", "Competence")
                        .WithMany("Tests")
                        .HasForeignKey("CompetenceId");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.VacancyClickResume", b =>
                {
                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Resume", "Resume")
                        .WithMany()
                        .HasForeignKey("ResumeId");

                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("VacancyId");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.VacancyMlResume", b =>
                {
                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Resume", "Resume")
                        .WithMany()
                        .HasForeignKey("ResumeId");

                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("VacancyId");
                });

            modelBuilder.Entity("Monica.Core.DbModel.ModelCrm.HR.VacancyWorkflow", b =>
                {
                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Resume", "Resume")
                        .WithMany()
                        .HasForeignKey("ResumeId");

                    b.HasOne("Monica.Core.DbModel.ModelCrm.HR.Vacancy", "Vacancy")
                        .WithMany()
                        .HasForeignKey("VacancyId");
                });
#pragma warning restore 612, 618
        }
    }
}
